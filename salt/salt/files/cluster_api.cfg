define host {
        use linux-server
        host_name node1
        alias node1
        address {{ pillar['ip_node_1'] }}
}

define host {
        use linux-server
        host_name node2
        alias node2
        address {{ pillar['ip_node_2'] }}
}

define service {
  use local-service
  host_name node1
  service_description PING
  check_command check_ping!100.0,20%!500.0,60%
}

define service {
  use local-service
  host_name node2
  service_description PING
  check_command check_ping!100.0,20%!500.0,60%
}


define service {
        use local-service
        host_name localhost
        service_description CLUSTER_API_AVAILABILITY
        check_command check_cluster_api
}

define service {
        use local-service
        host_name localhost
        service_description CLUSTER_STATUS
        check_command check_cluster_api_regex
}


define service {
        use local-service
        host_name localhost
        service_description NODES_STATUS
        check_command check_cluster_api_regex_nodes
}

define command {
        command_name check_cluster_api
        command_line $USER1$/check_http -S --IP "" --header "Authorization: Token " -u "/api/v1/cluster" --port 3000
}



define command {
        command_name check_cluster_api_regex
        command_line $USER1$/check_http -S --IP "" --header "Authorization: Token " -u "/api/v1/nodes" --port 3000 -r  \"state\":\"online\"
}

define command {
        command_name check_cluster_api_regex_nodes
        command_line $USER1$/check_http -S --IP "" --header "Authorization: Token " -u "/api/v1/nodes" --port 3000 --invert-regex  -r '\"state\"\:\"offline\"'
}
