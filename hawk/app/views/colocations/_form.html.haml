.panel.panel-default
  .panel-body{ data: { help_target: "#rightbar > .container-fluid > #helpentries > .attrhelp" } }
    = form_for [cib, colocation], horizontal: true, bootstrap: true do |main_form|
      = errors_for colocation

      - if colocation.new_record?
        = main_form.text_field :id, label: _("Constraint ID"), data: { help_filter: ".row.id" }
      - else
        = main_form.text_field :id, label: _("Constraint ID"), readonly: true, data: { help_filter: ".row.id" }

      #colocation_score_group.form-group{ data: { help_filter: ".row.score" } }
        %label.col-sm-5.control-label{ for: "colocation_score" }= _("Score")
        .col-sm-7
          .input-group
            .input-group-btn
              %button#colocation_score_btn.btn.btn-default.dropdown-toggle{ type: :button, aria: { haspopup: true, expanded: false }, data: { toggle: :dropdown } }
                %span.caret
              %ul.dropdown-menu
                %li
                  %a{ href: "#", data: { value: "INFINITY" } }= _("Always")
                  %a{ href: "#", data: { value: "-INFINITY" } }= _("Never")
            %input#colocation_score.form-control.text-field{ type: :text, name: "colocation[score]", value: colocation.score }

      %fieldset{ data: { constraints: colocation.resources.to_json, constraints_available: available_colocation_resources.to_json, constraints_selects: available_colocation_roles.to_json, constraints_prefix: "colocation[resources]", constraints_target: ".content" } }
        %legend
          = _("Resources")
          %span.pull-right.toggleable
            = icon_tag("chevron-up")

        .content.constraints

      %fieldset
        %legend
          = _("Advanced")
        .advanced
          = main_form.text_field :node_attr, label: _("Node Attribute"), data: { help_filter: ".row.node-attribute" }

      = main_form.button_group do
        - if colocation.new_record?
          = create_button(main_form, colocation)
        - else
          = apply_button(main_form, colocation)
          = revert_button(main_form, colocation)

        = link_to _("Back"), edit_cib_config_path(cib_id: cib.id), class: "btn btn-default back"
