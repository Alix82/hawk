<div class="ui-widget-content ui-corner-all" style="padding: 0.5em;">
<style type="text/css">
/* TODO: this does not belong here */
button { font-size: 0.7em !important; }
</style>
<script type="text/javascript">
function enable_apply() {
  $("#crm_config_submit").removeAttr("disabled");
  $("#crm_config_revert").removeAttr("disabled");
}
function init_prop_del(e) {
  e.button({
    icons: {
      primary: "ui-icon-minus"
    },
    text: false
  });
  e.click(function() {
    enable_apply();
    $(this).parent().parent().fadeOut("fast", function() {
      $(this).remove();
    });
    return false;
  });
}
function init_prop_edit(e) {
  e.keydown(enable_apply);
  e.change(enable_apply);
  e.keypress(function(event) {
    // ENTER to submit the form on property edits is counterintuitive
    event.stopPropagation();
    return event.keyCode != 13;
  });
}
function add_new_prop() {
  var new_name  = $("#new-prop").val();
  var new_value = $.trim($("#new-value").val());
  if (!new_value) {
    $("#no-value").fadeIn('fast');
    $("#new-value").focus();
    return;
  }

  $("#no-value").fadeOut('fast');
  var line = $("#empty-prop").clone().removeAttr("id");
  // Can't use clone(true) above to pick up events, because
  // it conflicts with Prototype.  Need to get rid of Prototype,
  // but in the meantime, we use init_prop_del(), and *don't*
  // set the button class to prop-del in the source HTML.
  init_prop_del(line.find("button"));
  line.children("th").append(new_name);
  var field = line.find("input");
  init_prop_edit(field);
  field.attr("id", "props_" + new_name).attr("name", "props[" + new_name + "]").val(new_value);
  $("#empty-prop").before(line);
  line.effect("highlight", {}, 1000);
  enable_apply();
  $("#new-value").val("");
}
$(function() {
  init_prop_del($(".prop-del"));
  init_prop_edit($(".prop-edit"));
  $(".prop-add").button({
    icons: {
      primary: "ui-icon-plus"
    },
    text: false
  });
  $(".prop-add").click(function() {
    add_new_prop();
    return false;
  });
  $("#new-value").keydown(function() {
    $("#no-value").fadeOut('fast');
  });
  $("#new-value").keypress(function(event) {
    // ENTER in the new value field needs to add the property
    if (event.keyCode != 13) return true;
    add_new_prop();
    return false;
  });
});
</script>
<% form_for([ @cib, @crm_config ]) do |f| %>
<% flash.each do |flash_type, message| %>
  <div id="flash-<%= flash_type %>" class="ui-state-<%= flash_type %> ui-corner-all" style="padding: 0.5em; margin-bottom: 0.5em;"><%=h message %></div>
<% end %>
  <table>
    <tr>
      <td colspan="3"><b><%=h _('Add new property:') %></b></td>
    </tr>
    <tr>
      <th><%= select_tag 'new-prop', options_for_select(@crm_config.all_props.select {|p|
        !(@crm_config.all_types[p][:readonly] || @crm_config.all_types[p][:advanced]) }) %></td>
      <td><%= text_field_tag 'new-value' %></td>
      <td><button class="prop-add" type="button"><%=h _("Add Property") %></button></td>
      <td><div id="no-value" class="ui-state-error ui-corner-all" style="font-size: 0.8em; padding: 0.3em; display: none;"><%=h _('You must enter a value') %></div></td>
    </tr>
    <tr>
      <td colspan="3">&nbsp;</td>
    </tr>
    <tr>
      <td colspan="3"><b><%=h _('Edit current properties:') %></b></td>
    </tr>
    <% @crm_config.props.sort{|a,b| a.to_s <=> b.to_s}.each do |n,v| %>
      <% next if @crm_config.all_types[n][:readonly] %>
      <tr>
        <th><%= label_tag "props[#{n}]", n %></th>
        <td><%= text_field_tag "props[#{n}]", v, { :class => 'prop-edit' } %></td>
        <td><button class="prop-del" type="button"><%=h _("Delete Property") %></button></td>
      </tr>
    <% end %>
    <tr id="empty-prop" style="display: none;">
      <th></th><td><%= text_field_tag 'empty-value' %></td><td><button type="button"><%=h _("Delete Property") %></button></td>
    </tr>
    <tr>
      <td colspan="3">&nbsp;</td>
    </tr>
    <tr>
      <td colspan="3" style="text-align: right">
        <%= f.submit _('Apply Changes'), { :disabled => true } %>
        <%= f.submit _('Revert Changes'), { :id => 'crm_config_revert', :name => 'revert', :disabled => true } %>
        <%= f.submit _('Back'), { :id => 'crm_config_cancel', :name => 'cancel' } %>
      </td>
    </tr>
  </table>
<% end %>
</div>
