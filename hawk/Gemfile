# Note: when using Bundler (i.e. on SLES), the Gemfile is used.
# Anywhere else, we don't package the Gemfile, so need to require
# rails, fast_gettext, etc. in config/boot.rb, i.e. if we add more
# gems here, they need to go in config/boot.rb as well.  Yes, this
# sucks, but it's the least-worst solution I can find right now for
# making Bundler go away when we neither need nor want it.
#
# Have I mentioned lately that while Bundler may be "the best way to
# manage a Ruby application's gems", it's an absolute menace if you're
# trying to build packaged software?
#

# not specifying a source means we don't go out to rubygems.org at build time
#source 'https://rubygems.org'

gem 'rails', '~> 3.2'

# Gems used only for assets and not required in production environments by default.
# Hawk doesn't use these yet at all...
group :assets do
#  gem 'sass-rails',   '~> 3.2.3'
#  gem 'coffee-rails', '~> 3.2.1'
  # See https://github.com/sstephenson/execjs#readme for more supported runtimes
  # gem 'therubyracer', :platforms => :ruby
#  gem 'uglifier', '>= 1.0.3'
end

# Hawk doesn't use this yet either
#gem 'jquery-rails'

gem 'fast_gettext'
 
# 0.4.3 contains fixes in
#'rake gettext:store_model_attributes' task
gem 'gettext_i18n_rails', '>= 0.4.3'

# rails-i18n provides translations for ActiveRecord validation error messages
# (this actually shouldn't be necessary given we don't use ActiveRecord)
# gem 'rails-i18n'

# needed to collect translatable strings - not needed at production
group :development do
  # no need to load the gem via require we only need the rake tasks
  gem 'gettext', '>= 1.9.3', :require => false
end

group :test do
  # This check ensures Bundler doesn't look at these gems when it's invoked
  # by magic during rake gettext:pack...
  if ENV['RAILS_ENV'] == "test"
    # Need gem source for travis-ci
    source 'https://rubygems.org'
    gem 'rake'
    gem 'brakeman'
  end
end

